<!--
Aurio: Audio Processing, Analysis and Retrieval Library
Copyright (C) 2010-2017  Mario Guggenberger <mg@protyposis.net>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:Aurio.WaveControls">

    <local:TimeSpanTicksConverter x:Key="TimeSpanTicksConverter"/>
    <local:LinearDecibelConverter x:Key="LinearDecibelConverter"/>
    <local:DecibelStringConverter x:Key="DecibelStringConverter"/>
    <local:LinearDecibelStringConverter x:Key="LinearDecibelStringConverter"/>

    <Style TargetType="{x:Type local:CaretOverlay}">
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CaretOverlay}">
                    <Grid>
                        <ContentPresenter/>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <Canvas Name="CaretContainer" Visibility="{TemplateBinding CaretVisibility}">
                                <Rectangle Name="PART_Caret"
                                           Width="1" 
                                           Fill="Black" 
                                           Height="{Binding ElementName=CaretContainer, Path=ActualHeight}" 
                                           Canvas.Left="{TemplateBinding PhysicalCaretOffset}"
                                           IsHitTestVisible="False"/>
                            </Canvas>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type Slider}}" TargetType="{x:Type local:LogSlider}"/>

    <Style TargetType="{x:Type local:VUMeter}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:VUMeter}">
                    <Border BorderBrush="Black" BorderThickness="1">
                        <Grid Margin="0">
                            <Rectangle Name="PART_IndicatorContainer" Margin="0">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Red" Offset="0"/>
                                        <GradientStop Color="#FF2BFF00" Offset="2"/>
                                        <GradientStop Color="#FFF1FF00" Offset="0.1"/>
                                        <GradientStop Color="#FF53FF00" Offset="0.25"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Name="PART_Indicator" Fill="#7E000000" VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:StereoVUMeter}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="#FFC4C4C4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:StereoVUMeter}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.1*"/>
                            <ColumnDefinition Width="0.22*"/>
                            <ColumnDefinition Width="0.1*"/>
                            <ColumnDefinition Width="0.24*"/>
                            <ColumnDefinition Width="0.1*"/>
                            <ColumnDefinition Width="0.22*"/>
                            <ColumnDefinition Width="0.1*"/>
                        </Grid.ColumnDefinitions>
                        <Label Name="decibelLabelLeft" Grid.Column="0" Grid.ColumnSpan="3" Content="{Binding ElementName=decibelMeterLeft, Path=Decibel, FallbackValue=dB, Converter={StaticResource DecibelStringConverter}}" FontSize="9" Padding="0" HorizontalAlignment="Center"/>
                        <Label Name="decibelLabelRight" Grid.Column="4" Grid.ColumnSpan="3" Content="{Binding ElementName=decibelMeterRight, Path=Decibel, FallbackValue=dB, Converter={StaticResource DecibelStringConverter}}" FontSize="9" Padding="0" HorizontalAlignment="Center"/>
                        <local:VUMeter x:Name="decibelMeterLeft" Grid.Row="1" Grid.Column="1" Amplitude="{TemplateBinding AmplitudeLeft}"/>
                        <local:VUMeter x:Name="decibelMeterRight" Grid.Row="1" Grid.Column="5" Amplitude="{TemplateBinding AmplitudeRight}"/>
                        <local:ExtendedTickBar Grid.Column="2" Grid.Row="1" Fill="{TemplateBinding Foreground}" Maximum="0" Ticks="0,-6,-12,-18,-24,-30,-36,-42,-48,-54,-60" TickRenderMode="Tick" />
                        <local:ExtendedTickBar Grid.Column="3" Grid.Row="1" Fill="{TemplateBinding Foreground}" Maximum="0" Ticks="0,-6,-12,-18,-24,-30,-36,-42,-48,-54,-60" TickRenderMode="Text" TextAlignment="Center" />
                        <local:ExtendedTickBar Grid.Column="4" Grid.Row="1" Fill="{TemplateBinding Foreground}" Maximum="0" Ticks="0,-6,-12,-18,-24,-30,-36,-42,-48,-54,-60" TickRenderMode="Tick" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="decibelMeterLeft" Property="IsOverdriven" Value="True">
                            <Setter TargetName="decibelLabelLeft" Property="Foreground" Value="Red"/>
                        </Trigger>
                        <Trigger SourceName="decibelMeterRight" Property="IsOverdriven" Value="True">
                            <Setter TargetName="decibelLabelRight" Property="Foreground" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CorrelationMeter}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="#FFC4C4C4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CorrelationMeter}">
                    <Grid Margin="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" Foreground="{TemplateBinding Foreground}" Content="-1" HorizontalAlignment="Left"/>
                        <Label Grid.Row="0" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Content="0" HorizontalAlignment="Center"/>
                        <Label Grid.Row="0" Grid.Column="2" Foreground="{TemplateBinding Foreground}" Content="+1" HorizontalAlignment="Right"/>
                        <Border BorderBrush="Black" BorderThickness="1" Grid.Row="1" Grid.ColumnSpan="3" Margin="0,3,0,0" ClipToBounds="True">
                            <Grid>
                                <Rectangle Name="PART_IndicatorContainer" Margin="0">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                            <GradientStop Color="Red" Offset="0"/>
                                            <GradientStop Color="#FFF1FF00" Offset="0.2"/>
                                            <GradientStop Color="#FF53FF00" Offset="0.4"/>
                                            <GradientStop Color="#FF2BFF00" Offset="0.5"/>
                                            <GradientStop Color="#FF53FF00" Offset="0.6"/>
                                            <GradientStop Color="#FFF1FF00" Offset="0.8"/>
                                            <GradientStop Color="Red" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Border>
                                    <DockPanel>
                                        <Rectangle Name="PART_Indicator" Margin="-1,0,1,0" Fill="#7E000000"/>
                                        <Rectangle Margin="1,0,0,0" Fill="#7E000000"/>
                                    </DockPanel>
                                </Border>
                                <Label Content="{TemplateBinding Value}" ContentStringFormat="{}{0:0.00}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ContentOverlay}">
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ContentOverlay}">
                    <Grid>
                        <ContentPresenter/>
                        <local:ContentOverlayDrawSurface Opacity="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ContentOverlay}}, Path=OverlayOpacity}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
